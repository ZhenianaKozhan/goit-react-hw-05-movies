{"version":3,"file":"static/js/877.00d78faa.chunk.js","mappings":"oLAEaA,E,OAAOC,GAAAA,GAAH,wF,uJCqCjB,EAlCa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUA,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAwBC,GAAxB,wFACyBC,EAAAA,EAAAA,IAAQD,GADjC,OACQE,EADR,OAEEJ,EAAQI,GAFV,4CADc,uBAAC,SAAD,2BAKdC,CAAST,EACV,GAAE,CAACA,KAGF,SAAC,IAAD,iBACGG,QADH,IACGA,OADH,EACGA,EAAMO,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWC,EAApB,EAAoBA,aAAcP,EAAlC,EAAkCA,GAAlC,OACT,2BACE,gBACEQ,IACED,EAAY,0CAC2BA,GACnC,sGAENE,IAAKJ,EACLK,MAAM,KACNC,OAAO,SAET,uBAAIN,KACJ,uCAAeC,OAZRN,EADA,KAkBhB,C,+LChCDY,EAAAA,EAAAA,SAAAA,QAHiB,+BAIjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMb,EAAO,mCAAG,WAAMD,GAAN,gGAEDY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,aAFC,cAEbe,EAFa,yBAGZA,EAAIC,KAAKnB,MAHG,gCAKnBoB,QAAQC,IAAR,MALmB,yDAAH,sDASPC,EAAU,mCAAG,WAAMnB,GAAN,gGAEJY,EAAAA,EAAAA,IAAA,iBAAoBZ,IAFhB,cAEhBe,EAFgB,yBAGfA,EAAIC,MAHW,gCAKtBC,QAAQC,IAAR,MALsB,yDAAH,sDASVE,EAAQ,mCAAG,WAAMC,GAAN,gFAChBC,EAAS,CACbC,OAAQ,CACNF,MAAOA,EACPG,KAAM,IAJY,kBASFZ,EAAAA,EAAAA,IAAA,gBAA2BU,GATzB,cASdP,EATc,yBAUbA,EAAIC,KAAKS,SAVI,gCAYpBR,QAAQC,IAAR,MAZoB,yDAAH,sDAgBRQ,EAAW,mCAAG,oGACPd,EAAAA,EAAAA,IAAA,uBADO,cACnBG,EADmB,yBAElBA,EAAIC,KAAKS,SAFS,2CAAH,qDAKXE,EAAU,mCAAG,WAAM3B,GAAN,gGAEJY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,aAFI,cAEhBe,EAFgB,yBAGfA,EAAIC,KAAKS,SAHM,gCAKtBR,QAAQC,IAAR,MALsB,yDAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 12px;\n  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getCast } from 'services/api';\nimport { List } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    async function loadCast(id) {\n      const responce = await getCast(id);\n      setCast(responce);\n    }\n    loadCast(movieId);\n  }, [movieId]);\n\n  return (\n    <List>\n      {cast?.map(({ name, character, profile_path, id }) => (\n        <li key={id}>\n          <img\n            src={\n              profile_path\n                ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                : 'https://www.shutterstock.com/image-vector/incognito-icon-browse-private-vector-260nw-1462596698.jpg'\n            }\n            alt={name}\n            width=\"80\"\n            height=\"120\"\n          />\n          <p>{name}</p>\n          <p>Character: {character}</p>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1f61c5c3e341d3551f825cc6aeed2125';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getCast = async id => {\n  try {\n    const res = await axios.get(`/movie/${id}/credits`);\n    return res.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDetails = async id => {\n  try {\n    const res = await axios.get(`/movie/${id}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getQuery = async query => {\n  const config = {\n    params: {\n      query: query,\n      page: 1,\n    },\n  };\n\n  try {\n    const res = await axios.get(`/search/movie`, config);\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTrending = async () => {\n  const res = await axios.get(`/trending/movie/day`);\n  return res.data.results;\n};\n\nexport const getReviews = async id => {\n  try {\n    const res = await axios.get(`/movie/${id}/reviews`);\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["List","styled","movieId","useParams","useState","cast","setCast","useEffect","id","getCast","responce","loadCast","map","name","character","profile_path","src","alt","width","height","axios","api_key","language","res","data","console","log","getDetails","getQuery","query","config","params","page","results","getTrending","getReviews"],"sourceRoot":""}