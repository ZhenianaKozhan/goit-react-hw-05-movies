{"version":3,"file":"static/js/521.88b1a851.chunk.js","mappings":"0NA6BA,IAzBkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACnB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA0BN,GAA1B,0EACmBA,EADnB,iCACiCO,EAAAA,EAAAA,MADjC,0DACuDC,EAAAA,EAAAA,IAASR,GADhE,0BACQS,EADR,KAEEN,EAAaM,GAFf,4CADc,yBAAC,SAAD,2BAKdC,EACD,GAAE,CAACV,KAGF,+BACGE,QADH,IACGA,OADH,EACGA,EAAWS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMZ,GAA1C,SACGS,KAFID,EADK,KASrB,C,4GCzBYK,E,OAAQC,GAAAA,MAAH,iI,SCwBlB,EAtBoB,WAAO,IAAD,EACxB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMrB,EAAK,UAAGoB,EAAaE,IAAI,gBAApB,QAAgC,GAS3C,OACE,iBAAKC,MAAO,CAAEC,QAAS,IAAvB,WACE,kBAAMC,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfR,EAAgB,CAAErB,MAAO4B,EAAKE,SAAS9B,MAAM+B,QAC7CH,EAAKI,OACN,EAIG,WACE,SAACf,EAAD,CAAOgB,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,uBAEDjC,IAAS,SAACmC,EAAA,EAAD,CAAWnC,MAAOA,MAGjC,E,SCZD,EATe,WACb,OACE,iCACE,SAAC,EAAD,KACA,SAAC,KAAD,MAGL,C,+LCLDoC,EAAAA,EAAAA,SAAAA,QAHiB,+BAIjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMC,EAAO,mCAAG,WAAM3B,GAAN,gGAEDwB,EAAAA,EAAAA,IAAA,iBAAoBxB,EAApB,aAFC,cAEb4B,EAFa,yBAGZA,EAAIC,KAAKC,MAHG,gCAKnBC,QAAQC,IAAR,MALmB,yDAAH,sDASPC,EAAU,mCAAG,WAAMjC,GAAN,gGAEJwB,EAAAA,EAAAA,IAAA,iBAAoBxB,IAFhB,cAEhB4B,EAFgB,yBAGfA,EAAIC,MAHW,gCAKtBE,QAAQC,IAAR,MALsB,yDAAH,sDASVpC,EAAQ,mCAAG,WAAMR,GAAN,gFAChB8C,EAAS,CACbC,OAAQ,CACN/C,MAAOA,EACPgD,KAAM,IAJY,kBASFZ,EAAAA,EAAAA,IAAA,gBAA2BU,GATzB,cASdN,EATc,yBAUbA,EAAIC,KAAKhC,SAVI,gCAYpBkC,QAAQC,IAAR,MAZoB,yDAAH,sDAgBRrC,EAAW,mCAAG,oGACP6B,EAAAA,EAAAA,IAAA,uBADO,cACnBI,EADmB,yBAElBA,EAAIC,KAAKhC,SAFS,2CAAH,qDAKXwC,EAAU,mCAAG,WAAMrC,GAAN,gGAEJwB,EAAAA,EAAAA,IAAA,iBAAoBxB,EAApB,aAFI,cAEhB4B,EAFgB,OAGtBG,QAAQC,IAAIJ,GAHU,kBAIfA,EAAIC,KAAKhC,SAJM,gCAMtBkC,QAAQC,IAAR,MANsB,yDAAH,qD","sources":["components/MovieList/MovieList.jsx","components/SearchMovie/SearchMovie.styled.js","components/SearchMovie/SearchMovie.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getQuery, getTrending } from 'services/api';\n\nconst MovieList = ({ query }) => {\n  const [movieList, setMovieList] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovie(query) {\n      const results = !query ? await getTrending() : await getQuery(query);\n      setMovieList(results);\n    }\n    fetchMovie();\n  }, [query]);\n\n  return (\n    <ul>\n      {movieList?.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 280px;\n  margin-right: 8px;\n  outline: none;\n\n  &:focus {\n    border-color: skyblue;\n  }\n`;\n","import MovieList from 'components/MovieList/MovieList';\nimport { useSearchParams } from 'react-router-dom';\nimport { Input } from './SearchMovie.styled';\n\nconst SearchMovie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <div style={{ padding: 16 }}>\n      <form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {query && <MovieList query={query} />}\n    </div>\n  );\n};\n\nexport default SearchMovie;\n","import SearchMovie from 'components/SearchMovie';\nimport { Outlet } from 'react-router-dom';\n\nconst Movies = () => {\n  return (\n    <>\n      <SearchMovie />\n      <Outlet />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1f61c5c3e341d3551f825cc6aeed2125';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const getCast = async id => {\n  try {\n    const res = await axios.get(`/movie/${id}/credits`);\n    return res.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getDetails = async id => {\n  try {\n    const res = await axios.get(`/movie/${id}`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getQuery = async query => {\n  const config = {\n    params: {\n      query: query,\n      page: 1,\n    },\n  };\n\n  try {\n    const res = await axios.get(`/search/movie`, config);\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTrending = async () => {\n  const res = await axios.get(`/trending/movie/day`);\n  return res.data.results;\n};\n\nexport const getReviews = async id => {\n  try {\n    const res = await axios.get(`/movie/${id}/reviews`);\n    console.log(res);\n    return res.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["query","useState","movieList","setMovieList","location","useLocation","useEffect","getTrending","getQuery","results","fetchMovie","map","id","title","to","state","from","Input","styled","useSearchParams","searchParams","setSearchParams","get","style","padding","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","MovieList","axios","api_key","language","getCast","res","data","cast","console","log","getDetails","config","params","page","getReviews"],"sourceRoot":""}