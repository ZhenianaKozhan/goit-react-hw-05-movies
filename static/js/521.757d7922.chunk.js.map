{"version":3,"file":"static/js/521.757d7922.chunk.js","mappings":"0NAgCA,IAzBkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACnB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WAAO,SACAC,EADD,4EACd,WAA0BC,EAAKR,GAA/B,0FAC4BS,EAAAA,EAAAA,GAASD,EAAKR,GAD1C,gBACUU,EADV,EACUA,QACRP,EAAaO,GAFf,2CADc,wBAKbV,EAAkCO,EAZrB,gBAY2CP,GAAhDO,EAXO,sBAYjB,GAAE,CAACP,KAGF,+BACGE,QADH,IACGA,OADH,EACGA,EAAWS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMZ,GAA1C,SACGS,KAFID,EADK,KASrB,C,4GC5BYK,E,OAAQC,GAAAA,MAAH,iI,SCwBlB,EAtBoB,WAAO,IAAD,EACxB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMrB,EAAK,UAAGoB,EAAaE,IAAI,gBAApB,QAAgC,GAS3C,OACE,iBAAKC,MAAO,CAAEC,QAAS,IAAvB,WACE,kBAAMC,SATW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfR,EAAgB,CAAErB,MAAO4B,EAAKE,SAAS9B,MAAM+B,QAC7CH,EAAKI,OACN,EAIG,WACE,SAACf,EAAD,CAAOgB,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,uBAEDjC,IAAS,SAACmC,EAAA,EAAD,CAAWnC,MAAOA,MAGjC,E,SCZD,EATe,WACb,OACE,iCACE,SAAC,EAAD,KACA,SAAC,KAAD,MAGL,C,8FCRKoC,EAAW,+BAGjBC,EAAAA,EAAAA,SAAAA,QAAyBD,EACzBC,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAM9B,EAAQ,mCAAG,6GAAOD,EAAP,+BAAa,GAAIR,EAAjB,+BAAyB,GACzCwC,EAAS,CACbC,OAAQ,CACNzC,MAAOA,IAHW,SAMCqC,EAAAA,EAAAA,IAAA,UAAaD,GAAb,OAAwB5B,GAAOgC,GANhC,cAMhBE,EANgB,yBAOfA,EAASC,MAPM,2CAAH,oD","sources":["components/MovieList/MovieList.jsx","components/SearchMovie/SearchMovie.styled.js","components/SearchMovie/SearchMovie.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieAPI } from 'services/api';\n\nconst searchURL = '/search/movie';\nconst trendingURL = '/trending/movie/day';\n\nconst MovieList = ({ query }) => {\n  const [movieList, setMovieList] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovie(url, query) {\n      const { results } = await MovieAPI(url, query);\n      setMovieList(results);\n    }\n    !query ? fetchMovie(trendingURL) : fetchMovie(searchURL, query);\n  }, [query]);\n\n  return (\n    <ul>\n      {movieList?.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 280px;\n  margin-right: 8px;\n  outline: none;\n\n  &:focus {\n    border-color: skyblue;\n  }\n`;\n","import MovieList from 'components/MovieList/MovieList';\nimport { useSearchParams } from 'react-router-dom';\nimport { Input } from './SearchMovie.styled';\n\nconst SearchMovie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <div style={{ padding: 16 }}>\n      <form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {query && <MovieList query={query} />}\n    </div>\n  );\n};\n\nexport default SearchMovie;\n","import SearchMovie from 'components/SearchMovie';\nimport { Outlet } from 'react-router-dom';\n\nconst Movies = () => {\n  return (\n    <>\n      <SearchMovie />\n      <Outlet />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1f61c5c3e341d3551f825cc6aeed2125';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const MovieAPI = async (url = '', query = '') => {\n  const config = {\n    params: {\n      query: query,\n    },\n  };\n  const response = await axios.get(`${BASE_URL}${url}`, config);\n  return response.data;\n};\n"],"names":["query","useState","movieList","setMovieList","location","useLocation","useEffect","fetchMovie","url","MovieAPI","results","map","id","title","to","state","from","Input","styled","useSearchParams","searchParams","setSearchParams","get","style","padding","onSubmit","e","preventDefault","form","currentTarget","elements","value","reset","type","name","MovieList","BASE_URL","axios","api_key","language","config","params","response","data"],"sourceRoot":""}