{"version":3,"file":"static/js/568.916c4e4b.chunk.js","mappings":"sIAAA,SAASA,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C,2GCFA,EAzBkB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,GAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAUjB,OARAC,EAAAA,EAAAA,YAAU,WAAO,SACAC,EADD,sEACd,WAA0BC,EAAKR,GAA/B,0FAC4BS,EAAAA,EAAAA,GAASD,EAAKR,GAD1C,gBACUU,EADV,EACUA,QACRP,EAAaO,GAFf,2CADc,wBAKbV,EAAkCO,EAZrB,gBAY2CP,GAAhDO,EAXO,sBAYjB,GAAE,CAACP,KAGF,+BACGE,QADH,IACGA,OADH,EACGA,EAAWS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACd,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMZ,GAA1C,SACGS,KAFID,EADK,KASrB,C,yFCnBD,EATsB,WACpB,OACE,4BACE,4CACA,SAACK,EAAA,EAAD,MAGL,ECCD,EARa,WACX,OACE,+BACE,SAAC,EAAD,KAGL,C,mECHYR,EAAW,SAACD,EAAKU,GAC5B,OAAOC,EAAAA,EAAAA,IAAA,UAJQ,gCAIR,OACcX,EADd,oBAHO,mCAGP,kBAC8CU,IAClD5B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,IAAR,GACZ,C","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/MovieList/MovieList.jsx","components/TrendingMovie/TrendingMovie.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieAPI } from 'services/api';\n\nconst searchURL = '/search/movie';\nconst trendingURL = '/trending/movie/day';\n\nconst MovieList = ({ query }) => {\n  const [movieList, setMovieList] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovie(url, query) {\n      const { results } = await MovieAPI(url, query);\n      setMovieList(results);\n    }\n    !query ? fetchMovie(trendingURL) : fetchMovie(searchURL, query);\n  }, [query]);\n\n  return (\n    <ul>\n      {movieList?.map(({ id, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n","import MovieList from 'components/MovieList';\n\nconst TrendingMovie = () => {\n  return (\n    <div>\n      <h2>Trending today</h2>\n      <MovieList />\n    </div>\n  );\n};\n\nexport default TrendingMovie;\n","import TrendingMovie from 'components/TrendingMovie';\n\nconst Home = () => {\n  return (\n    <>\n      <TrendingMovie />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '1f61c5c3e341d3551f825cc6aeed2125';\n\nexport const MovieAPI = (url, param) => {\n  return axios\n    .get(`${BASE_URL}${url}?api_key=${API_KEY}&query=${param}`)\n    .then(res => res.data);\n};\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","query","useState","movieList","setMovieList","location","useLocation","useEffect","fetchMovie","url","MovieAPI","results","map","id","title","to","state","from","MovieList","param","axios","res","data"],"sourceRoot":""}